import os
import json

class ToDoList:
    def __init__(self, file_name="todo_list.json"):
        self.file_name = file_name
        self.tasks = self.load_tasks()

    def load_tasks(self):
        if os.path.exists(self.file_name):
            try:
                with open(self.file_name, "r") as file:
                    return json.load(file)
            except (IOError, json.JSONDecodeError):
                print("Error loading tasks. Starting with an empty list.")
        return []

    def save_tasks(self):
        try:
            with open(self.file_name, "w") as file:
                json.dump(self.tasks, file)
        except IOError:
            print("Error saving tasks.")

    def add_task(self, description):
        task = {"description": description, "completed": False}
        self.tasks.append(task)
        self.save_tasks()
        print("Task added successfully.")

    def view_tasks(self):
        if not self.tasks:
            print("No tasks available.")
            return
        for idx, task in enumerate(self.tasks, 1):
            status = "Done" if task["completed"] else "Pending"
            print(f"{idx}. {task['description']} - {status}")

    def update_task(self, task_number, new_description):
        if 0 < task_number <= len(self.tasks):
            self.tasks[task_number - 1]["description"] = new_description
            self.save_tasks()
            print("Task updated successfully.")
        else:
            print("Invalid task number.")

    def delete_task(self, task_number):
        if 0 < task_number <= len(self.tasks):
            del self.tasks[task_number - 1]
            self.save_tasks()
            print("Task deleted successfully.")
        else:
            print("Invalid task number.")

    def mark_task_completed(self, task_number):
        if 0 < task_number <= len(self.tasks):
            self.tasks[task_number - 1]["completed"] = True
            self.save_tasks()
            print("Task marked as completed.")
        else:
            print("Invalid task number.")

def main():
    todo_list = ToDoList()

    while True:
        print("\nTo-Do List Application")
        print("1. Add a task")
        print("2. View all tasks")
        print("3. Update a task")
        print("4. Delete a task")
        print("5. Mark a task as completed")
        print("6. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            description = input("Enter the task description: ")
            todo_list.add_task(description)
        elif choice == '2':
            todo_list.view_tasks()
        elif choice == '3':
            try:
                task_number = int(input("Enter the task number to update: "))
                new_description = input("Enter the new task description: ")
                todo_list.update_task(task_number, new_description)
            except ValueError:
                print("Invalid input. Please enter a valid task number.")
        elif choice == '4':
            try:
                task_number = int(input("Enter the task number to delete: "))
                todo_list.delete_task(task_number)
            except ValueError:
                print("Invalid input. Please enter a valid task number.")
        elif choice == '5':
            try:
                task_number = int(input("Enter the task number to mark as completed: "))
                todo_list.mark_task_completed(task_number)
            except ValueError:
                print("Invalid input. Please enter a valid task number.")
        elif choice == '6':
            print("Exiting the application.")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 6.")

if __name__ == "__main__":
    main()
